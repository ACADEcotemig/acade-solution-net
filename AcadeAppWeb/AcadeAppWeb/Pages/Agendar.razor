@page "/agendar"
@using AcadeAppWeb.Models
@using AcadeAppWeb.Services
@inject HttpClient Http
@inject AuthService Auth

<section class="coleta-container">
    <div class="mapa">

        <img src="Imagens/mapa.png" alt="Mapa com localização"
             style="cursor:pointer;"
             @onclick="AbrirMaps" />

    </div>

    <div class="formulario-coleta">
        <form @onsubmit="RegisterLocation">
            <label for="email">E-mail:</label>
            <input type="text" id="email" @bind="Email" placeholder="Digite seu e-mail" />

            <label for="senha">Senha:</label>
            <input type="password" id="senha" @bind="Senha" placeholder="Digite sua senha" />

            <label for="localizacao">Localização:</label>
            <input type="text" id="localizacao" @bind="Localizacao" placeholder="Digite sua localizacao" />

            <button type="submit" class="botao-link">Registrar localização</button>
        </form>

        @if (!string.IsNullOrEmpty(Mensagem))
        {
            <p style="margin-top:15px; font-weight:bold; color:@MensagemCor;">@Mensagem</p>
        }

        <label for="infoAdicional">Informações adicionais:</label>
        <input type="text" id="infoAdicional" placeholder="Detalhes extras" />

        <div class="coleta-especial">
            <label>
                <input type="checkbox" id="especial" />
                <span>Coleta especial</span>
            </label>
        </div>
    </div>
</section>

<section class="avaliacao-coleta">
    <label class="titulo-avaliacao">Avaliar coleta:</label>
    <div class="estrelas">
        <input type="radio" id="estrela5" name="estrela" value="5"><label for="estrela5">&#9733;</label>
        <input type="radio" id="estrela4" name="estrela" value="4"><label for="estrela4">&#9733;</label>
        <input type="radio" id="estrela3" name="estrela" value="3"><label for="estrela3">&#9733;</label>
        <input type="radio" id="estrela2" name="estrela" value="2"><label for="estrela2">&#9733;</label>
        <input type="radio" id="estrela1" name="estrela" value="1"><label for="estrela1">&#9733;</label>
    </div>
    <textarea placeholder="Deixe seu comentário..." class="comentario"></textarea>
</section>

<section class="mapa-enderecos">
    <img src="Imagens/bairros-enderecos2.png" alt="Endereços por região" />
</section>

@code {
    private string Email;
    private string Senha;
    private string Localizacao;
    private string Mensagem;
    private string MensagemCor = "red";

    private async Task RegisterLocation()
    {
        try
        {
            // Authenticate via the API instead of comparing plaintext locally
            var authUser = await Auth.AuthenticateAsync(Email, Senha);
            if (authUser == null)
            {
                Mensagem = "❌ Usuário ou senha incorretos.";
                MensagemCor = "red";
                return;
            }

            // fetch full user by id and update location
            var fullUser = await Http.GetFromJsonAsync<Usuario>($"http://localhost:5206/api/usuarios/{authUser.Id}");
            if (fullUser == null)
            {
                Mensagem = "❌ Usuário não encontrado.";
                MensagemCor = "red";
                return;
            }

            fullUser.Localizacao = Localizacao;
            var resp = await Http.PutAsJsonAsync($"http://localhost:5206/api/usuarios/{fullUser.Id}", fullUser);
            if (resp.IsSuccessStatusCode)
            {
                Mensagem = "✅ Localização registrada com sucesso!";
                MensagemCor = "green";
            }
            else
            {
                Mensagem = "❌ Falha ao atualizar localização.";
                MensagemCor = "red";
            }
        }
        catch (Exception ex)
        {
            Mensagem = "❌ Erro ao comunicar com o servidor." + " " + ex.Message;
            MensagemCor = "red";
        }
    }
    private void AbrirMaps()
    {
        string url = "https://www.google.com/maps/search/pontos+de+coleta/";
        NavManager.NavigateTo(url, forceLoad: true);
    }

    [Inject] NavigationManager NavManager { get; set; }
}
